[0, 50]
void filtering(void) {
    for (int k = 0; k < NSAMPLES; k++) {
        // Compute states dynamic.
        xn[0] = (1.047972048879746 * x[0]) + (-0.753869378152208 * x[1]) +
                (0.521134146729929 * x[2]) + (-0.299899053931107 * x[3]);
        xn[1] = 1.0 * x[0];
        xn[2] = 0.5 * x[1];
        xn[3] = 0.25 * x[2];
        // Add input.
        xn[0] += (1.0 * rawSamples[chanIndex][k]);
        // Compute filter outputs.
        fftSamples[chanIndex][k] = (0.051926380144877 * x[0]) +
                                   (0.278557250291417 * x[1]) +
                                   (0.290157822447976 * x[2]) +
                                   (0.058040767908851 * x[3]);
        // Update states.
        x[0] = xn[0];
        x[1] = xn[1];
        x[2] = xn[2];
        x[3] = xn[3];
    }
}

[1, 50]
void filtering(void) {
    for (int k = 0; k < NSAMPLES; k++) {
        // Compute states dynamic.
        xn[0] = (4.982299894866674 * x[0]) + (-2.670516588873929 * x[1]) +
                (1.639673755044611 * x[2]) + (-1.295658609575271 * x[3]) +
                (0.688953992452069 * x[4]) + (-0.478902471444334 * x[5]) +
                (0.193363779087193 * x[6]) + (-0.140418006218082 * x[7]);
        xn[1] = 4.0 * x[0];
        xn[2] = 2.0 * x[1];
        xn[3] = 1.0 * x[2];
        xn[4] = 1.0 * x[3];
        xn[5] = 0.5 * x[4];
        xn[6] = 0.5 * x[5];
        xn[7] = 0.125 * x[6];
        // Add input.
        xn[0] += (0.5 * rawSamples[chanIndex][k]);
        // Compute filter outputs.
        fftSamples[chanIndex][k] = (0.102315760003591 * x[0]) +
                                   (0.032779328541446 * x[1]) +
                                   (-0.158701721153891 * x[2]) +
                                   (0.216839765330798 * x[3]) +
                                   (-0.055766510449583 * x[4]) +
                                   (-0.122291363605494 * x[5]) +
                                   (0.111504655141471 * x[6]) +
                                   (0.055003200604287 * x[7]);
        // Update states.
        x[0] = xn[0];
        x[1] = xn[1];
        x[2] = xn[2];
        x[3] = xn[3];
        x[4] = xn[4];
        x[5] = xn[5];
        x[6] = xn[6];
        x[7] = xn[7];
    }
}
